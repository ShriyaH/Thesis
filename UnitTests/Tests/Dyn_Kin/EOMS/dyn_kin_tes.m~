%% Dynamics and Kinematics block check 
%Inertial, Relative in A, Relative in B, Relative in B with DQ, 6dof with
%and without controls
clear data
clc
global Sun SC I m mu Kleopatra Var Switch

%% Common Input Values 
% Initialize_models;

%% Select Integrator 
Switch.Razgus = 0;
Switch.Q = 0;
Switch.Q_rel = 0;
Switch.DQ = 0;
Switch.DOF6 = 1;
Switch.DOF6_lin = 0;

%% Plot
Switch.Q_plots = 0;
Switch.convert_q = 0;
Switch.kepler_el = 0;
Switch.kepler_n= 0;
Switch.err = 0;

%% Initialize
if Switch.SRP
    %For SRP check 
    x_I = [0   0   100e3];
    v_I = [0 -41.787629748527260 0];
    w_BI = [0 0 0];
    w_AI = [0 0 0];
elseif Switch.TBP
    %For 3RP check 
    x_I = [0 100e3 0];
    v_I = [-41.1527817563532 0 7.25634575485216];
    w_BI = [0 0 0];
    w_AI = [0 0 0];
elseif Switch.DOF6 || Switch.DOF6_lin
    m_sc = 2;
    g = [-1;0;0];
    x_I = [1; 0; 2];
    v_I = [0.2; 0; -1]; 
    q_BI = [0; 0; 0; 1]; 
    w_BI = [0; 0; 0.3]; 
    Th_B = [0; 0; 2];
    Th_dot_B = [0;0;0];
    I = 0.5.*eye(3);
    w_AI = [0 0 0];
    u = [2.56587820108167,3.99266588430566,0.978021501846517,-0.597950345991760,...
    -3.00385836546618,-3.18401018259941,-2.85661368948329,-2.78609166740569,...
    -4.66639400982699,-4.55089114507239,-3.28503290444219,-0.179902744911664,...	
    2.66472434555527,4.72168971038681,5.56482896733056,5.58549498763925,...
    4.68639443093420,3.96040236275891,2.85576174004548,-1.17583667081550,...	
    -3.30866907158830,-4.04806637185807,-4.33460066713889,-5.07623965657771,...	
    -5.19064355272963,-3.40331750604941,-0.893385556455460,6.43134403106353,8.53413753365434,0;
    -9.89380961871234,3.45296850303132,7.94753781522837,7.05501859973264,...
    1.69413244775209,-2.13750702207513,-4.06834859344495,-4.20301079756376,...
    -1.93473799605713,-0.578972990664162,-0.0150289581556460,-0.274979751743707,...
    -0.651789005545169,0.103072417540174,1.53160081783541,1.41709400770654,...
    -0.366329418886211,-1.07094279857290,-0.262716528342716,0.132694461974571,...
    0.522450895509362,3.26377226903777,4.76846362117490,1.79486417303638,-2.45489548805800,...
    -5.53381134556841,-4.19204284678611,-1.42416676779499,5.37873340126128,0;
    0.0139643249145358,-0.00551166811788279,-0.0154517655281686,-0.0295261083090259,...
    -0.0204315619275735,-0.00700130106598788,0.00282704981612779,0.0148035766548615,...
    0.0595460458220143,0.0429859312907470,0.0450309450519581,0.0478862170595148,...
    0.0462473536968840,-0.0184667412077176,-0.0763711847216189,-0.140818591373701,...
    -0.119839189093742,-0.0426032812462433,0.00789981992040960,0.0841419757478245,...	
    0.0525952984728003,0.0495998323713686,0.0315522724535539,0.0272814056389653,...
    0.0183113488896174,-0.00547706853034973,-0.0316617630450550,-0.0371172132611443,...
    0.00561689149866950,0];
tdot = [1.82382650187413e-11	0.427660837434587	1.09310096301659	1.25608771398764	1.15641140284070	0.655761989209051	0.125116217641902	-0.350912497601917	-0.815244542127294	-1.59299391771409	-2.35150608396107	-2.89904020751512	-2.92904158508365	-2.48492378874503	-1.69796603718246	-0.770480779832495	0.160441575129415	0.941523132406715	1.60160811087720	2.07757549239061	1.88160092227050	1.33013838413666	0.655446799551624	-0.0669977222978063	-0.913045568880394	-1.77815764228978	-2.34538230071663	-2.49429304184006	-1.42238478355681	-8.04857734141883e-13
       -1.19457262135847e-10	-1.64895138475302	-1.07339595664542	0.251223841832637	1.42705185801368	1.70936922283710	1.35307676076444	0.675001896724150	-0.0254957404396612	-0.347935875191188	-0.444419232725705	-0.446919819633802	-0.492749440092619	-0.601379972954660	-0.584198880228078	-0.328933390075204	-0.0927681621548848	-0.153833873034992	-0.332317490274969	-0.376114072421492	-0.353995374228317	-0.266950941380135	0.277033268838724	1.07180793728920	1.37096080600296	0.961791001816844	0.0394671911370365	-0.659153854822835	-0.896547448443459	-4.98444138206904e-13
        5.54029448166726e-12	0.00232835901279258	0.00140744876434318	-0.00117138385721471	-0.00609571371676464	-0.00950308001968412	-0.0106703447156261	-0.0101976672954591	-0.00772685183025909	0.00220283077081692	0.00937358328761636	0.0168852171494109	0.0248713448752074	0.0325810944737722	0.0294998188586651	0.0167604534896697	-0.00672996737041293	-0.0267108344362954	-0.0338125131088491	-0.0324928258043733	-0.0184643137696944	-0.00969381113679817	-0.00142226086063334	0.00384037979261287	0.00838938348752624	0.0114411797103436	0.0105265184454342	0.00524705607349074	-0.000939998731099354	-4.75938300190442e-13];
else
    %For dynamic block check
    x_I = [0 60e3 0];
    v_I = [53.947598031175893 0 0];
    w_BI = [6.28318e-4 0 0];
    w_AI = Kleopatra.w_AI;
end
W_AI1 = omega_tensor(w_AI,1);                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
W_AI2 = omega_tensor(w_AI,2);

% q_BI =[0 0 0 1];
% q_AI = [0 0 0 1];
% C_AI = Q2DCM(q_AI);
C_BI = Q2DCM(q_BI);

%% Inertial Dynamics and Kinematics
if Switch.Q 
    [Var.t,Var.y] = test_inert_eom(x_I,v_I,w_BI,q_BI,q_AI,W_AI2); %integrate for inertial frame (Cartesian and Quaternions)

%Convert to relative frame 
    for i = 1:length(Var.y)
        Var.norm_ri(i) = norm(Var.y(i,1:3));
        
        q_IA(:,i) = conj_quat(Var.y(i,14:17)');
        C_AIt(3*i-2:3*i,:) = Q2DCM(Var.y(i,14:17)');

        C_BIt(3*i-2:3*i,:) = Q2DCM(Var.y(i,10:13)');

        Var.q_BAt(1:4,i) = cross_quat(Var.y(i,10:13)',q_IA(:,i));
        C_BAt(3*i-2:3*i,:) = Q2DCM(Var.q_BAt(1:4,i));

        Var.r_At(:,i) = C_AIt(3*i-2:3*i,:)*Var.y(i,1:3)';
        Var.r_Bt(:,i) = C_BAt(3*i-2:3*i,:)*Var.r_At(:,i);

        Var.v_At(:,i) = C_AIt(3*i-2:3*i,:)*Var.y(i,4:6)'- W_AI1*Var.r_At(:,i);
        Var.v_Bt(:,i) = C_BAt(3*i-2:3*i,:)*Var.v_At(:,i);

        Var.w_BA_b(:,i) = Var.y(i,7:9)'- C_BAt(3*i-2:3*i,:)*w_AI';
        Var.w_BA_a(:,i) = C_BAt(3*i-2:3*i,:)'*Var.w_BA_b(:,i);
        
        Var.w_AI_B(:,i) = C_BAt(3*i-2:3*i,:)*w_AI';
    end
end

%% Relative Dynamics and Kinematics: Dual Quaternions %%

%Relative frame Initialisation
% x_A = (C_AI*x_I');
% v_BA_A = (C_AI*v_I') - (W_AI1*x_A);
% q_BA = cross_quat(q_BI',q_AI');
% C_BA = Q2DCM(q_BA);
% 
% v_BA_B = C_BA*v_BA_A;
% w_AI_B = (C_BA*w_AI');
% w_BA_B = w_BI'-w_AI_B;

if Switch.Q_rel    
    [Var.t2,Var.y2,Var.r_B] = test_rel_b_eom(w_AI,x_A',v_BA_B',w_BA_B',q_BA');
    for j = 1:length(Var.y2)
        Var.norm_rb(j) = norm(Var.r_B(j,1:3));
        Var.norm_ra(j) = norm(Var.y2(j,1:3));
    end
end

if Switch.DQ 
    %change to DQ format
    dI = dq_inertia(SC.mass.m_i,SC.I.I_total);
    dw_BA = [w_BA_B' 0 v_BA_B' 0];
    dq_BA = Q2DQ(q_BA,x_A',2)';

    %warning('off','all')

    [Var.t3,Var.y3,Var.dqr_A,Var.dqr_B] = test_rel_dq_eom(dI,w_AI,dq_BA,dw_BA);
    
    for j = 1:length(Var.y3)
        Var.norm_dqra(j) = norm(Var.dqr_A(j,1:3));
        Var.norm_dqrb(j) = norm(Var.dqr_B(j,1:3));
        
        C_BAtt(3*j-2:3*j,:) = Q2DCM(Var.y3(j,1:4)');
        C_ABtt(3*j-2:3*j,:) = C_BAtt(3*j-2:3*j,:)';
        
        C_AItt(3*j-2:3*j,:) = Q2DCM([0;0;sin((w_AI(3)*Var.t3(j))/2);cos((w_AI(3)*Var.t3(j))/2)]);
        C_IAtt(3*j-2:3*j,:) = C_AItt(3*j-2:3*j,:)';
        
        Var.dqr_I(j,1:3) = (C_IAtt(3*j-2:3*j,:) * Var.dqr_A(j,1:3)')';
        Var.dqv_I(j,1:3) = (C_IAtt(3*j-2:3*j,:) * (C_ABtt(3*j-2:3*j,:)*Var.y3(j,13:15)' + (W_AI1*Var.dqr_A(j,1:3)')))';
        
        C_BAtt(3*j-2:3*j,:) = Q2DCM(Var.y3(j,1:4)');
        Var.dqw_AI_B(:,j) = C_BAtt(3*j-2:3*j,:)*w_AI';
    end
end

%% Inertial Descent: Non-linear %%

    
if Switch.DOF6    
    y = test_inert_nonlineom(I,m_sc,x_I,v_I,q_BI,w_BI,Th_B,Th_dot_B,g,u,tdot,1);    
end

%% Inertial Descent: Linear %%

if Switch.DOF6_lin 
    [tspan,tode4,y1] = test_inert_lineom(I,m_sc,x_I,v_I,q_BI,w_BI,Th_B,Th_dot_B,g,t,y,1);    
end

dyn_block_plots();
